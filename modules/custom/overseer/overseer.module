<?php
/**
  * @file
  * Overseer module hooks and site configuration.
  */

use Drupal\file\Entity\File;

/* Get settings from submitted form. */
$overseer_settings = \Drupal::config('overseer.settings');

/* Get Drupal database. */
$db = \Drupal::database();

/* Query Service page. */
$query = $db->query("SELECT * FROM {node_field_data} WHERE type = 'service'");
$result = $query->fetchAll();

/* For each Service page. */
foreach ($result as $value) {
  $nid = $value->nid;
  $service_page = $overseer_settings->get($nid);
  $alt = $overseer_settings->get('alt_text-'.$nid);
  $new_title = $overseer_settings->get('title-'.$nid);
  $new_body = $overseer_settings->get('body-'.$nid);

  // Configure current Service page.
  if (!empty($service_page)) {
    $query = $db->query("SELECT * FROM {file_managed} WHERE fid = $service_page[0]");
    $result = $query->fetchAll();
    $service_page_path = $result[0]->uri;
    $service_page_fid = $result[0]->fid;
    $node = \Drupal::entityTypeManager()->getStorage('node')->load($nid);
    $new_hero = [
      [
        'target_id' => $service_page_fid,
        'alt' => $alt,
        'title' => '',
      ]
    ];
    $node->set('field_hero', $new_hero);
    if (strlen($new_title) > 0) {
      $node->set('title', $new_title);
    }
    if (strlen($new_body) > 0) {
      $node->set('body', $new_body);
    }
  }
}

/**
 * {@inheritdoc}
 * Hook for image preview widget on file upload.
 */
function overseer_preprocess_image_widget(&$variables) {
  $element = $variables['element'];

  $variables['attributes'] = array('class' => array('image-widget', 'js-form-managed-file', 'form-managed-file', 'clearfix'));

  if (!empty($element['fids']['#value'])) {
    $file = reset($element['#files']);
    $element['file_' . $file->id()]['filename']['#suffix'] = ' <span class="file-size">(' . format_size($file->getSize()) . ')</span> ';
    $file_variables = array(
      'style_name' => $element['#preview_image_style'],
      'uri' => $file->getFileUri(),
    );

    // Determine image dimensions.
    if (isset($element['#value']['width']) && isset($element['#value']['height'])) {
      $file_variables['width'] = $element['#value']['width'];
      $file_variables['height'] = $element['#value']['height'];
    } else {
      $image = \Drupal::service('image.factory')->get($file->getFileUri());
      if ($image->isValid()) {
        $file_variables['width'] = $image->getWidth();
        $file_variables['height'] = $image->getHeight();
      }
      else {
        $file_variables['width'] = $file_variables['height'] = NULL;
      }
    }

    $element['preview'] = array(
      '#weight' => -10,
      '#theme' => 'image_style',
      '#width' => $file_variables['width'],
      '#height' => $file_variables['height'],
      '#style_name' => $file_variables['style_name'],
      '#uri' => $file_variables['uri'],
    );

    // Store the dimensions in the form so the file doesn't have to be
    // accessed again. This is important for remote files.
    $element['width'] = array(
      '#type' => 'hidden',
      '#value' => $file_variables['width'],
    );
    $element['height'] = array(
      '#type' => 'hidden',
      '#value' => $file_variables['height'],
    );
  }

  $variables['data'] = array();
  foreach (\Drupal\Core\Render\Element::children($element) as $child) {
    $variables['data'][$child] = $element[$child];
  }
}

/**
 * {@inheritdoc}
 * Attach Overseer library to all pages.
 */
function overseer_preprocess_node(&$variables) {
  $variables['#attached']['library'][] = 'overseer/overseer';
}
